-- MySQL Script generated by MySQL Workbench
-- 05/03/15 15:12:54
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema socialnetwork
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema socialnetwork
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `socialnetwork` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `socialnetwork` ;

-- -----------------------------------------------------
-- Table `socialnetwork`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialnetwork`.`user` (
  `iduser` INT NOT NULL AUTO_INCREMENT,
  `user_login` VARCHAR(45) NOT NULL,
  `user_password` VARCHAR(45) NOT NULL,
  `user_name` VARCHAR(45) NOT NULL,
  `user_firstname` VARCHAR(45) NOT NULL,
  `user_birthdate` DATE NOT NULL,
  `user_mail` VARCHAR(45) NOT NULL,
  `user_token` VARCHAR(45) NULL,
  PRIMARY KEY (`iduser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialnetwork`.`post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialnetwork`.`post` (
  `idpost` INT NOT NULL AUTO_INCREMENT,
  `post_content` VARCHAR(1000) NOT NULL,
  `post_date` DATETIME NOT NULL,
  `iduser` INT NOT NULL,
  PRIMARY KEY (`idpost`),
  INDEX `fk_post_user_idx` (`iduser` ASC),
  CONSTRAINT `fk_post_user`
    FOREIGN KEY (`iduser`)
    REFERENCES `socialnetwork`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialnetwork`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialnetwork`.`comment` (
  `idcomment` INT NOT NULL AUTO_INCREMENT,
  `comment_content` VARCHAR(500) NOT NULL,
  `comment_date` DATETIME NOT NULL,
  `iduser` INT NOT NULL,
  `idpost` INT NOT NULL,
  PRIMARY KEY (`idcomment`),
  INDEX `fk_comment_user1_idx` (`iduser` ASC),
  INDEX `fk_comment_post1_idx` (`idpost` ASC),
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`iduser`)
    REFERENCES `socialnetwork`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_post1`
    FOREIGN KEY (`idpost`)
    REFERENCES `socialnetwork`.`post` (`idpost`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialnetwork`.`friend`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialnetwork`.`friend` (
  `iduser` INT NOT NULL,
  `idfriend` INT NOT NULL,
  `friend_accepted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`iduser`, `idfriend`),
  INDEX `fk_user_has_user_user2_idx` (`idfriend` ASC),
  INDEX `fk_user_has_user_user1_idx` (`iduser` ASC),
  CONSTRAINT `fk_user_has_user_user1`
    FOREIGN KEY (`iduser`)
    REFERENCES `socialnetwork`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_user_user2`
    FOREIGN KEY (`idfriend`)
    REFERENCES `socialnetwork`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialnetwork`.`like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialnetwork`.`like` (
  `idlike` INT NOT NULL AUTO_INCREMENT,
  `like_date` DATETIME NOT NULL,
  `iduser` INT NOT NULL,
  `idpost` INT NULL,
  `idcomment` INT NULL,
  PRIMARY KEY (`idlike`),
  INDEX `fk_comment_has_user_user1_idx` (`iduser` ASC),
  INDEX `fk_comment_has_user_comment1_idx` (`idcomment` ASC),
  INDEX `fk_like_post1_idx` (`idpost` ASC),
  CONSTRAINT `fk_comment_has_user_comment1`
    FOREIGN KEY (`idcomment`)
    REFERENCES `socialnetwork`.`comment` (`idcomment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_has_user_user1`
    FOREIGN KEY (`iduser`)
    REFERENCES `socialnetwork`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_like_post1`
    FOREIGN KEY (`idpost`)
    REFERENCES `socialnetwork`.`post` (`idpost`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialnetwork`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialnetwork`.`tag` (
  `idtag` INT NOT NULL AUTO_INCREMENT,
  `iduser` INT NOT NULL,
  `tag_date` DATETIME NOT NULL,
  `idpost` INT NULL,
  `idcomment` INT NULL,
  `user_tagged` INT NOT NULL,
  PRIMARY KEY (`idtag`),
  INDEX `fk_user_has_post_post1_idx` (`idpost` ASC),
  INDEX `fk_user_has_post_user1_idx` (`iduser` ASC),
  INDEX `fk_tag_user1_idx` (`user_tagged` ASC),
  INDEX `fk_tag_comment1_idx` (`idcomment` ASC),
  CONSTRAINT `fk_user_has_post_user1`
    FOREIGN KEY (`iduser`)
    REFERENCES `socialnetwork`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_post_post1`
    FOREIGN KEY (`idpost`)
    REFERENCES `socialnetwork`.`post` (`idpost`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tag_user1`
    FOREIGN KEY (`user_tagged`)
    REFERENCES `socialnetwork`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tag_comment1`
    FOREIGN KEY (`idcomment`)
    REFERENCES `socialnetwork`.`comment` (`idcomment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialnetwork`.`notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialnetwork`.`notification` (
  `idnotification` INT NOT NULL AUTO_INCREMENT,
  `idcomment` INT NULL,
  `idlike` INT NULL,
  `idtag` INT NULL,
  PRIMARY KEY (`idnotification`),
  INDEX `fk_notification_tag1_idx` (`idtag` ASC),
  INDEX `fk_notification_comment1_idx` (`idcomment` ASC),
  INDEX `fk_notification_like1_idx` (`idlike` ASC),
  CONSTRAINT `fk_notification_tag1`
    FOREIGN KEY (`idtag`)
    REFERENCES `socialnetwork`.`tag` (`idtag`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notification_comment1`
    FOREIGN KEY (`idcomment`)
    REFERENCES `socialnetwork`.`comment` (`idcomment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notification_like1`
    FOREIGN KEY (`idlike`)
    REFERENCES `socialnetwork`.`like` (`idlike`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialnetwork`.`user_notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialnetwork`.`user_notification` (
  `idnotification` INT NOT NULL,
  `iduser` INT NOT NULL,
  `isRead` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idnotification`, `iduser`),
  INDEX `fk_notification_has_user_user1_idx` (`iduser` ASC),
  INDEX `fk_notification_has_user_notification1_idx` (`idnotification` ASC),
  CONSTRAINT `fk_notification_has_user_notification1`
    FOREIGN KEY (`idnotification`)
    REFERENCES `socialnetwork`.`notification` (`idnotification`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notification_has_user_user1`
    FOREIGN KEY (`iduser`)
    REFERENCES `socialnetwork`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
